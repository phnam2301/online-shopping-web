-- Drop schema if exists
DROP SCHEMA IF EXISTS shop CASCADE;

CREATE SCHEMA shop;

-- =====================================================
-- Function auto update column "updated"
-- =====================================================
CREATE OR REPLACE FUNCTION shop.set_updated_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated = now();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- =====================================================
-- Table tags
-- =====================================================
CREATE TABLE shop.tags (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	code VARCHAR(55) UNIQUE,
	name VARCHAR(55) NOT NULL,
	created TIMESTAMPTZ DEFAULT now(),
	updated TIMESTAMPTZ
);

CREATE TRIGGER trg_tags_updated
BEFORE UPDATE ON shop.tags
FOR EACH ROW
EXECUTE FUNCTION shop.set_updated_timestamp();

-- =====================================================
-- Table permission
-- =====================================================
CREATE TABLE shop.permission (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	role BIGINT REFERENCES shop.tags(id),
	feature BIGINT REFERENCES shop.tags(id)
);

-- =====================================================
-- Table users
-- =====================================================
CREATE TABLE shop.users (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	role BIGINT REFERENCES shop.tags(id),
	status BIGINT REFERENCES shop.tags(id),
	gender BIGINT REFERENCES shop.tags(id),
	email VARCHAR(255) UNIQUE,
	phone VARCHAR(55) UNIQUE,
	username VARCHAR(32) UNIQUE,
	password TEXT NOT NULL,
	firstname VARCHAR(100),
	lastname VARCHAR(100),
	dob DATE,
	address TEXT,
	created TIMESTAMPTZ DEFAULT now(),
	updated TIMESTAMPTZ
);

CREATE TRIGGER trg_users_updated
BEFORE UPDATE ON shop.users
FOR EACH ROW
EXECUTE FUNCTION shop.set_updated_timestamp();

-- =====================================================
-- Table products
-- =====================================================
CREATE TABLE shop.products (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	status BIGINT REFERENCES shop.tags(id),
	name VARCHAR(255) UNIQUE,
	description TEXT,
	weight NUMERIC(10,2),
	sku VARCHAR(100),
	quantity INT DEFAULT 0 CHECK (quantity >= 0),
	price DECIMAL(10,2) DEFAULT 0 CHECK (price >= 0),
	discount INT DEFAULT 0 CHECK (discount BETWEEN 0 AND 100),
	created TIMESTAMPTZ DEFAULT now(),
	updated TIMESTAMPTZ
);

CREATE TRIGGER trg_products_updated
BEFORE UPDATE ON shop.products
FOR EACH ROW
EXECUTE FUNCTION shop.set_updated_timestamp();

-- =====================================================
-- Table product_category
-- =====================================================
CREATE TABLE shop.product_category (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	product_id BIGINT REFERENCES shop.products(id),
	category BIGINT REFERENCES shop.tags(id)
);

-- =====================================================
-- Table product_flag
-- =====================================================
CREATE TABLE shop.product_flag (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	product_id BIGINT REFERENCES shop.products(id),
	flag BIGINT REFERENCES shop.tags(id)
);

-- =====================================================
-- Table orders
-- =====================================================
CREATE TABLE shop.orders (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	user_id BIGINT REFERENCES shop.users(id),
	status BIGINT REFERENCES shop.tags(id),
	subtotal DECIMAL(10,2) NOT NULL CHECK (subtotal >= 0),
    discount DECIMAL(10,2) DEFAULT 0 CHECK (discount >= 0),
    shipping_fee DECIMAL(10,2) DEFAULT 0 CHECK (shipping_fee >= 0),
    tax DECIMAL(10,2) DEFAULT 0 CHECK (tax >= 0),
	total_price DECIMAL(10,2),
	receiving_address TEXT,
	created TIMESTAMPTZ DEFAULT now(),
	updated TIMESTAMPTZ
);

CREATE TRIGGER trg_orders_updated
BEFORE UPDATE ON shop.orders
FOR EACH ROW
EXECUTE FUNCTION shop.set_updated_timestamp();

-- =====================================================
-- Table order_items
-- =====================================================
CREATE TABLE shop.order_items (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	order_id BIGINT REFERENCES shop.orders(id),
	product_id BIGINT REFERENCES shop.products(id),
	price DECIMAL(10,2) NOT NULL CHECK (price >= 0),
    quantity INT NOT NULL CHECK (quantity > 0)
);

-- =====================================================
-- Table cart_items
-- =====================================================
CREATE TABLE shop.cart_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT REFERENCES shop.users(id),
    product_id BIGINT REFERENCES shop.products(id),
    quantity INT NOT NULL CHECK (quantity > 0),
    added TIMESTAMPTZ DEFAULT now()
);

-- =====================================================
-- Table payments
-- =====================================================
CREATE TABLE shop.payments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id BIGINT REFERENCES shop.orders(id),
    method BIGINT REFERENCES shop.tags(id),
    status BIGINT REFERENCES shop.tags(id),
    amount DECIMAL(10,2) NOT NULL,
    created TIMESTAMPTZ DEFAULT now()
);
